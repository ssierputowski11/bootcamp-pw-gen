{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AppComponent {\n  constructor() {\n    this.generatedPassword = '';\n    this.letters = false;\n    this.numbers = false;\n    this.symbols = false;\n    this.length = 0;\n  }\n  onButtonClickGeneratePassword() {\n    const letters = 'abcdefghijklmnopqrstuvwxyz';\n    const numbers = '1234567890';\n    const symbols = '!@#$%^&*()';\n    let validChars = '';\n    if (this.letters) validChars += letters;\n    if (this.numbers) validChars += numbers;\n    if (this.symbols) validChars += symbols;\n    for (let i = 0; i < this.length; i++) {\n      const index = Math.floor(Math.random() * validChars.length);\n      this.generatedPassword += validChars[index];\n    }\n  }\n  onChangeUseLetters() {\n    this.letters = !this.letters;\n  }\n  onChangeUseNumbers() {\n    this.numbers = !this.numbers;\n  }\n  onChangeUseSymbols() {\n    this.symbols = !this.symbols;\n  }\n  onInputSetLength(e) {\n    const length = parseInt(e.target.value);\n    if (length) this.length = length;else this.length = 0;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 25,\n    vars: 1,\n    consts: [[3, \"input\"], [\"type\", \"checkbox\", 3, \"change\"], [3, \"click\"], [3, \"value\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Password Generator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n        i0.ɵɵtext(4, \"Enter Length\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 0);\n        i0.ɵɵlistener(\"input\", function AppComponent_Template_input_input_5_listener($event) {\n          return ctx.onInputSetLength($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n        i0.ɵɵtext(8, \"Use Letters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 1);\n        i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_9_listener() {\n          return ctx.onChangeUseLetters();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n        i0.ɵɵtext(12, \"Use Numbers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 1);\n        i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_13_listener() {\n          return ctx.onChangeUseNumbers();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\");\n        i0.ɵɵtext(16, \"Use Symbols\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 1);\n        i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_17_listener() {\n          return ctx.onChangeUseSymbols();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\")(19, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_19_listener() {\n          return ctx.onButtonClickGeneratePassword();\n        });\n        i0.ɵɵtext(20, \"Generate!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\")(22, \"label\");\n        i0.ɵɵtext(23, \"Your Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(24);\n        i0.ɵɵproperty(\"value\", ctx.generatedPassword);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","generatedPassword","letters","numbers","symbols","length","onButtonClickGeneratePassword","validChars","i","index","Math","floor","random","onChangeUseLetters","onChangeUseNumbers","onChangeUseSymbols","onInputSetLength","e","parseInt","target","value","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_Template_input_input_5_listener","$event","AppComponent_Template_input_change_9_listener","AppComponent_Template_input_change_13_listener","AppComponent_Template_input_change_17_listener","AppComponent_Template_button_click_19_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\ssier\\source\\repos\\InterviewPreps\\AngularBootcamp\\PasswordGenerator\\password-generator\\src\\app\\app.component.ts","C:\\Users\\ssier\\source\\repos\\InterviewPreps\\AngularBootcamp\\PasswordGenerator\\password-generator\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  generatedPassword = '';\n  letters = false;\n  numbers = false;\n  symbols = false;\n  length = 0;\n\n  onButtonClickGeneratePassword() {\n    const letters = 'abcdefghijklmnopqrstuvwxyz';\n    const numbers = '1234567890';\n    const symbols = '!@#$%^&*()';\n\n    let validChars = '';\n    if (this.letters)\n      validChars += letters;\n    if (this.numbers)\n      validChars += numbers;\n    if (this.symbols)\n      validChars += symbols;\n\n    for (let i = 0; i < this.length; i++) {\n      const index = Math.floor(Math.random() * validChars.length);\n      this.generatedPassword += validChars[index];\n    }\n  }\n\n  onChangeUseLetters() {\n    this.letters = !this.letters;\n  }\n\n  onChangeUseNumbers() {\n    this.numbers = !this.numbers;\n  }\n\n  onChangeUseSymbols() {\n    this.symbols = !this.symbols;\n  }\n\n  onInputSetLength(e: Event) {\n    const length = parseInt((e.target as HTMLInputElement).value);\n    if (length)\n      this.length = length;\n    else\n      this.length = 0;\n  }\n}\n","<h1>Password Generator</h1>\n\n<div>\n  <label>Enter Length</label>\n  <input (input)=\"onInputSetLength($event)\" />\n</div>\n\n<div>\n  <label>Use Letters</label>\n  <input type=\"checkbox\" (change)=\"onChangeUseLetters()\" />\n</div>\n\n<div>\n  <label>Use Numbers</label>\n  <input type=\"checkbox\" (change)=\"onChangeUseNumbers()\" />\n</div>\n\n<div>\n  <label>Use Symbols</label>\n  <input type=\"checkbox\" (change)=\"onChangeUseSymbols()\" />\n</div>\n\n<div>\n  <button (click)=\"onButtonClickGeneratePassword()\">Generate!</button>\n</div>\n\n<div>\n  <label>Your Password</label>\n  <input [value]=\"generatedPassword\" />\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}